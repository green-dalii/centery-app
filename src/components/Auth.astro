---
import { Icon } from 'astro-icon/components';
---

<div class="p-6">
    <!-- LOGO Hero -->
    <div class="flex justify-center my-14">
        <Icon name="centery-logo" class="text-7xl" />
    </div>
    <div class="mb-6">
        <div class="flex bg-base-200 rounded-lg p-1 mb-6">
            <button id="login-btn" class="flex-1 py-2 px-4 rounded-md bg-base-100 shadow-sm font-medium text-primary">登录</button>
            <button id="register-btn" class="flex-1 py-2 px-4 rounded-md font-medium text-base-content/60">注册</button>
        </div>
    </div>

    <!-- Login Form -->
    <div id="login-form" class="space-y-4">
        <div>
            <label class="block text-xs font-medium text-base-content mb-2">用户名</label>
            <input type="text" id="login-username" class="input input-bordered w-full" placeholder="请输入用户名">
        </div>
        <div>
            <label class="block text-xs font-medium text-base-content mb-2">密码</label>
            <input type="password" id="login-password" class="input input-bordered w-full" placeholder="请输入密码">
        </div>
        <button id="login-submit" class="btn btn-primary w-full">登录</button>
    </div>

    <!-- Register Form -->
    <div id="register-form" class="space-y-4 hidden">
        <div>
            <label class="block text-xs font-medium text-base-content mb-2">新用户名（不少于3位）</label>
            <input type="text" id="register-username" class="input input-bordered w-full" placeholder="请输入至少3位的用户名">
        </div>
        <div>
            <label class="block text-xs font-medium text-base-content mb-2">密码（不少于6位）</label>
            <input type="password" id="register-password" class="input input-bordered w-full" placeholder="请输入至少6位的密码">
        </div>
        <div>
            <label class="block text-xs font-medium text-base-content mb-2">确认密码</label>
            <input type="password" id="register-confirm" class="input input-bordered w-full" placeholder="请再次输入密码">
        </div>
        <button id="register-submit" class="btn btn-primary w-full">注册</button>
    </div>

    <!-- Powered by GreenerAI -->
    <div class="flex flex-col text-center mt-6">
        <p class="text-xs text-base-content/50">Powered by <a class="font-bold" href="https://www.greenerdalii.top" target="_blank">Greener-Dalii Studio.</a></p>
    </div>
</div>

<script>
    // API base URL
    const API_BASE = '/api';

    // API functions
    async function apiCall(endpoint: string, options: any = {}) {
        const config = {
            headers: {
                'Content-Type': 'application/json'
            },
            ...options
        };

        try {
            const response = await fetch(`${API_BASE}${endpoint}`, config);
            const data = await response.json();
            
            if (!response.ok) {
                throw new Error(data.error || 'API request failed');
            }
            
            return data;
        } catch (error: any) {
            console.error('API Error:', error);
            throw error;
        }
    }

    // Auth functions
    async function login(username: string, password: string) {
        try {
            const data = await apiCall('/auth/login', {
                method: 'POST',
                body: JSON.stringify({ username, password })
            });
            
            localStorage.setItem('authToken', data.token);
            (window as any).showToast('登录成功！', 'success');
            document.dispatchEvent(new CustomEvent('loginsuccess', { bubbles: true, composed: true }));
        } catch (error: any) {
            (window as any).showToast(error.message, 'error');
        }
    }

    async function register(username: string, password: string) {
        try {
            const data = await apiCall('/auth/register', {
                method: 'POST',
                body: JSON.stringify({ username, password })
            });
            
            localStorage.setItem('authToken', data.token);
            (window as any).showToast('注册成功！', 'success');
            document.dispatchEvent(new CustomEvent('loginsuccess'));
        } catch (error: any) {
            (window as any).showToast(error.message, 'error');
        }
    }

    // Event listeners
    document.addEventListener('DOMContentLoaded', function() {
        // Auth form switching
        const loginBtn = document.getElementById('login-btn');
        const registerBtn = document.getElementById('register-btn');
        const loginForm = document.getElementById('login-form');
        const registerForm = document.getElementById('register-form');

        loginBtn?.addEventListener('click', () => {
            if (loginBtn) loginBtn.className = 'flex-1 py-2 px-4 rounded-md bg-base-100 shadow-sm font-medium text-primary';
            if (registerBtn) registerBtn.className = 'flex-1 py-2 px-4 rounded-md font-medium text-base-content/60';
            loginForm?.classList.remove('hidden');
            registerForm?.classList.add('hidden');
        });

        registerBtn?.addEventListener('click', () => {
            if (registerBtn) registerBtn.className = 'flex-1 py-2 px-4 rounded-md bg-base-100 shadow-sm font-medium text-primary';
            if (loginBtn) loginBtn.className = 'flex-1 py-2 px-4 rounded-md font-medium text-base-content/60';
            registerForm?.classList.remove('hidden');
            loginForm?.classList.add('hidden');
        });

        // Login form
        const loginSubmit = document.getElementById('login-submit');
        loginSubmit?.addEventListener('click', async () => {
            const usernameInput = document.getElementById('login-username') as HTMLInputElement;
            const passwordInput = document.getElementById('login-password') as HTMLInputElement;
            if (!usernameInput || !passwordInput) return;
            
            const username = usernameInput.value.trim();
            const password = passwordInput.value;
            
            if (!username || !password) {
                (window as any).showToast('请填写完整信息', 'error');
                return;
            }
            
            await login(username, password);
        });

        // Register form
        const registerSubmit = document.getElementById('register-submit');
        registerSubmit?.addEventListener('click', async () => {
            const usernameInput = document.getElementById('register-username') as HTMLInputElement;
            const passwordInput = document.getElementById('register-password') as HTMLInputElement;
            const confirmInput = document.getElementById('register-confirm') as HTMLInputElement;
            if (!usernameInput || !passwordInput || !confirmInput) return;
            
            const username = usernameInput.value.trim();
            const password = passwordInput.value;
            const confirm = confirmInput.value;
            
            if (!username || !password || !confirm) {
                (window as any).showToast('请填写完整信息', 'error');
                return;
            }
            
            if (password !== confirm) {
                (window as any).showToast('两次密码输入不一致', 'error');
                return;
            }
            
            await register(username, password);
        });
    });
</script>